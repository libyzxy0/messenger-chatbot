import { YTNode } from '../helpers.js';
import Parser from '../index.js';
import { Text } from '../misc.js';
import NavigationEndpoint from './NavigationEndpoint.js';
class InfoRow extends YTNode {
    constructor(data) {
        var _a, _b;
        super();
        if ('defaultMetadata' in data && 'runs' in data.defaultMetadata) {
            const runs = data.defaultMetadata.runs;
            if (runs.length > 0) {
                const run = runs[0];
                this.metadata_text = run === null || run === void 0 ? void 0 : run.text;
                if ('navigationEndpoint' in run) {
                    this.metadata_endpoint = Parser.parseItem({ navigationEndpoint: run.navigationEndpoint }, NavigationEndpoint) || undefined;
                }
            }
        }
        if ('expandedMetadata' in data && 'runs' in data.expandedMetadata) {
            this.metadata_text = new Text(data.expandedMetadata);
        }
        if (this.metadata_text === undefined) {
            this.metadata_text = ((_a = data.expandedMetadata) === null || _a === void 0 ? void 0 : _a.simpleText)
                ? new Text(data.expandedMetadata)
                : ((_b = data.defaultMetadata) === null || _b === void 0 ? void 0 : _b.simpleText)
                    ? new Text(data.defaultMetadata)
                    : undefined;
        }
        this.info_row_expand_status_key = data.infoRowExpandStatusKey;
        this.title = new Text(data.title);
    }
}
InfoRow.type = 'InfoRow';
export default InfoRow;
//# sourceMappingURL=InfoRow.js.map