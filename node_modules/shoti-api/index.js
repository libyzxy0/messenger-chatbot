class Shoti {
   constructor(api_key) {
      this.api_key = api_key;
   }
   getShoti(obj) {
   	return new Promise((resolve, reject) => {
       	let getS = require('./lib/getShoti');
           getS({
           	api_key: this.api_key,
               type: obj.type
           })
           .then((res) => resolve(res))
           .catch((err) => {
           	let error = new Error({ code: 400, message: "Something went wrong!", error: err })
			   reject(error)
           }) 
       })
   }
   addShoti(obj) {
   	return new Promise((resolve, reject) => {
   	    let postS = require('./lib/addShoti');
           postS({
           	api_key: this.api_key,
               url: obj.url,
               type: obj.type
           })
           .then((res) => resolve(res))
           .catch((err) => {
           	let error = new Error({ code: 400, message: "Something went wrong!", error: err })
			   reject(error)
           }) 
       })
   }
   customPlay(obj) {
   	return new Promise((resolve, reject) => {
   	    let ctpS = require('./lib/customPlay');
           ctpS({
           	api_key: this.api_key,
               type: obj.type,
               id: obj.id
           })
           .then((res) => resolve(res))
           .catch((err) => {
           	let error = new Error({ code: 400, message: "Something went wrong!", error: err })
			   reject(error)
           }) 
       })
   }
   randomID() {
   	return new Promise((resolve, reject) => {
   	    resolve({ message: "This is a test!" });
       })
   }
}

module.exports = Shoti;